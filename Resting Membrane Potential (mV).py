# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z3UmiA_fw1bbxkZ8j0uL0E5LqG7d6yPI
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# ----- Example Data Path -----
file_path = '/content/drive/MyDrive/PatchClampData/Python2/WT1.asc'

# ----- Parameters -----
baseline_window = 5  # Baseline window in seconds

# ----- Data Processing -----
try:
    # Load the data
    data = pd.read_csv(file_path, sep=',', skiprows=6, header=None)
    if data.shape[1] == 4:
        data.columns = ["Index", "Time[s]", "V-mon[V]", "Stimulus"]
    else:
        data.columns = ["Index", "Time[s]", "V-mon[V]"]

    # Extract time and voltage
    time = data["Time[s]"].values
    voltage = data["V-mon[V]"].values * 1000  # Convert to mV

    # Filter data for baseline window
    baseline_voltage = voltage[time <= baseline_window]
    avg_rmp = np.mean(baseline_voltage)
    sem_rmp = np.std(baseline_voltage) / np.sqrt(len(baseline_voltage))

    print(f"✅ Resting Membrane Potential (RMP): {avg_rmp:.2f} mV")
    print(f"✅ Standard Error of the Mean (SEM): {sem_rmp:.2f} mV")

    # ----- Visualization -----
    plt.figure(figsize=(8, 6))
    plt.plot(time, voltage, color='blue', linewidth=1.2, label='Membrane Potential')
    plt.axhline(y=avg_rmp, color='red', linestyle='--', linewidth=1.2, label=f'RMP = {avg_rmp:.2f} mV')
    plt.xlabel('Time (s)', fontsize=14)
    plt.ylabel('Membrane Potential (mV)', fontsize=14)
    plt.title('Plasma Membrane Potential', fontsize=16)
    plt.legend()
    plt.tight_layout()
    plt.savefig('plasma_membrane_potential.svg', format='svg', bbox_inches='tight')
    plt.show()

except Exception as e:
    print(f"Error processing the file: {e}")
